{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kerry/ceaper/pages/post/[slug].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\nexport default function PostTemplate(_ref) {\n  var content = _ref.content,\n      data = _ref.data;\n  // This holds the data between `---` from the .md file\n  var frontmatter = data;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, frontmatter.title), __jsx(ReactMarkdown, {\n    source: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n}\n\nPostTemplate.getInitialProps = function _callee(context) {\n  var slug, content, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          slug = context.query.slug; // Import our .md file using the `slug` from the URL\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(import(\"../../content/\".concat(slug, \".md\")));\n\n        case 3:\n          content = _context.sent;\n          // Parse .md data through `matter`\n          data = matter(content[\"default\"]); // Pass data to the component props\n\n          return _context.abrupt(\"return\", _objectSpread({}, data));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/kerry/ceaper/pages/post/[slug].js"],"names":["React","matter","ReactMarkdown","PostTemplate","content","data","frontmatter","title","getInitialProps","context","slug","query"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,eAAe,SAASC,YAAT,OAAyC;AAAA,MAAjBC,OAAiB,QAAjBA,OAAiB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACtD;AACA,MAAMC,WAAW,GAAGD,IAApB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,WAAW,CAACC,KAAjB,CADF,EAGE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEH,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAEDD,YAAY,CAACK,eAAb,GAA+B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,UAAAA,IADqB,GACZD,OAAO,CAACE,KADI,CACrBD,IADqB,EAE7B;;AAF6B;AAAA,2CAGP,+BAAwBA,IAAxB,SAHO;;AAAA;AAGvBN,UAAAA,OAHuB;AAK7B;AACMC,UAAAA,IANuB,GAMhBJ,MAAM,CAACG,OAAO,WAAR,CANU,EAQ7B;;AAR6B,6DASjBC,IATiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B","sourcesContent":["import React from 'react'\nimport matter from 'gray-matter'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function PostTemplate({ content, data }) {\n  // This holds the data between `---` from the .md file\n  const frontmatter = data\n  \n  return (\n    <div>\n      <h1>{frontmatter.title}</h1>\n\n      <ReactMarkdown source={content} />\n    </div>\n  )\n}\n\nPostTemplate.getInitialProps = async (context) => {\n  const { slug } = context.query\n  // Import our .md file using the `slug` from the URL\n  const content = await import(`../../content/${slug}.md`)\n\n  // Parse .md data through `matter`\n  const data = matter(content.default)\n\n  // Pass data to the component props\n  return { ...data }\n}\n"]},"metadata":{},"sourceType":"module"}