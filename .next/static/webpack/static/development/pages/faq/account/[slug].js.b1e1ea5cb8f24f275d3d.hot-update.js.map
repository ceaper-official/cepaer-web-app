{"version":3,"file":"static/webpack/static/development/pages/faq/account/[slug].js.b1e1ea5cb8f24f275d3d.hot-update.js","sources":["webpack:///./pages/faq/account/[slug].js"],"sourcesContent":["import React from 'react'\nimport matter from 'gray-matter'\nimport ReactMarkdown from 'react-markdown'\nimport BaseLayout from '../../../layouts/base.js'\nimport  NavFAQMobile from \"../../../layouts/nav-faq-mobile.js\";\nimport  NavFAQ from \"../../../layouts/nav-faq.js\";\nimport Search from \"../../../assets/icons/ui/search.js\";\n\nexport default function FaqTemplate({ content, data }) {\n  // This holds the data between `---` from the .md file\n  const frontmatter = data\n\n  return (\n    <BaseLayout>\n      <div id=\"page\"className=\"side-nav-page\">\n\n        <div className = 'contents bg-grey'> <div className='section center-section'>\n          <div className=\"search-wrapper faq-search\">\n            <span className=\"search-icon\">\n              <span className=\"search-icon-inner\"><Search/></span>\n            </span>\n            <input className=\"search\" type=\"search\" name=\"q\" placeholder=\"お困りのキーワードで検索\"/>\n          </div>\n        </div>\n        </div>\n\n        <div className='contents'>\n        <div className='section faq-wrapper'>\n\n   <NavFAQ/>\n     <NavFAQMobile/>\n\n       <div className=\"faq-inner article\">\n      <h1>{frontmatter.title}</h1>\n\n      <ReactMarkdown source={content} />\n      </div>\n\n    </div>\n  </div>\n\n\n          <div className='contents'>\n          <div className='section'>\n<form  id=\"voteForm\" action=\"#\" method=\"get\">\n\n</form>\n            \n                </div>\n              </div>\n\n</div>\n  </BaseLayout>\n  )\n}\n\nFaqTemplate.getInitialProps = async (context) => {\n  const { slug } = context.query\n  // Import our .md file using the `slug` from the URL\n  const faq = await import(`../../../faq/account/${slug}.md`)\n\n  // Parse .md data through `matter`\n  const data = matter(faq.default)\n\n  // Pass data to the component props\n  return { ...data }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAPA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}